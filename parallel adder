Source Code (PA)
module par1(x, y, cin, sum, cout);
input [3:0] x,y;
input cin;
wire c1, c2, c3; output [3:0]sum;
output cout;
par stagee (x[0], y[0], cin, sum[0], c1);
par stage1 (x[1], y[1], c1, sum[1], c2);
par stage2 (x[2], y[2], c2, sum [2], c3);
par stage3 (x[3], y[3], c3, sum [3], cout);
endmodule
module par (x,y, carryin, sum, carryout); input x,y, carryin;
output sum, carryout;
assign sum=x^y^carryin; assign
carryout=(x&y) | (y&carryin) | (carryin&x); endmodule


Testbench Code
module par2_v; reg [3:0] x;
reg [3:0] y; reg cin;
wire [3:0] sum; wire cout;
par1 uut (.x(x),.y(y), .cin(cin),.sum(sum), .cout(cout));
initial begin
x=4'b1001;
y=4'b1110; cin=0'b0;
#15
x=4'b1111;y=4'b1010; cin=1'b1;
#15
x=4'b1011;y=4'b0110; cin=1'b0;
#15
x=4'b0111;y=4'b1110; cin=1'b0; #15 $finish;
end
endmodule
